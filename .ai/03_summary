# ZeroClient MVP Project Summary

## Project Overview

ZeroClient is a web-based monitoring system for industrial installations designed to operate efficiently in challenging connectivity environments. The project has evolved from an initial multi-week concept to an accelerated 3-4 day development sprint with emphasis on upfront design.

## Key Requirements

- **Mobile-optimized** interface supporting one-handed operation
- **Cache-first architecture** with manual controls for offline usage
- Support for **multiple backend connections** (IBI Lab and URHydro)
- **Auto-generated tabular views** of industrial data
- **Embeddable widgets** for external websites
- Four-tier **access control** system

## Tech Stack

- **Frontend**: Astro 5 + React 19 + Tailwind + Shadcn/UI
- **Backend**: Supabase (PostgreSQL, authentication, API)
- **Architecture**: Microfrontends using Module Federation
- **Caching**: IndexedDB for offline storage
- **Deployment**: Docker on Mikrus 1.0 Pro (1 vCPU, 640MB RAM)

## Development Strategy

The team recently shifted to an ultra-rapid development approach:

1. **Day 1**: Comprehensive design and wireframing
2. **Day 2**: Foundation & Core UI implementation
3. **Day 3**: Data layer & visualization components
4. **Day 4**: Caching, widgets & deployment

This strategy prioritizes solid upfront design to accelerate the coding phases, leveraging domain expertise in SCADA systems.

## Implementation Tactics

- Maximize AI pairing for code generation and review
- Start with simplified architecture, evolve later
- Leverage existing solutions (Supabase, Shadcn)
- Focus exclusively on core user flows
- Prepare architecture for future evolution

## Next Steps

1. Revised PRD documentation
2. Revised tech stack documentation

by Alice @ Claude 3.7 Sonnet, 20250512
